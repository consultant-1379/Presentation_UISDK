<?xml version="1.0"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>MultiLanguage</title>
	</properties>
	
	
<body>
<p>
	&nbsp;
</p>
<p>
	For main supporting Languages we use Requirejs I18N plugin see documentation there <a href="http://requirejs.org/docs/api.html#i18n">http://requirejs.org/docs/api.html#i18n</a>
</p>
<p>
	Multilingual structure is Same like provided in this plugin. Our SDK provide "dictionary" variable in any view in all Application.
</p>
<p>
	&nbsp;
</p>
<h2>Setup Multilingual example:</h2>
<p>
	All Language files Included in project root "language" folder.
</p>
<p>
	Place for Language files is language/<span style="color: rgb(255,0,0);">namespace*</span>/nls/ namespace is application name.
</p>
<p>
	create dictionary.js file:
</p>
<table class="wysiwyg-macro" data-macro-name="code" data-macro-parameters="language=javascript" style="background-image: url(/plugins/servlet/confluence/placeholder/macro-heading?definition=e2NvZGU6bGFuZ3VhZ2U9amF2YXNjcmlwdH0&amp;locale=en_GB&amp;version=2); background-repeat: no-repeat;" data-macro-body-type="PLAIN_TEXT">
<tbody>
<tr>
	<td class="wysiwyg-macro-body">
<pre>define({
    "root":true,
    'fr-fr':true
});</pre>
	</td>
</tr>
</tbody>
</table>
<p>
	"root" is required value, This is the default language.
</p>
<p>
	Then create folder for languages in nls folder. like root, fr-fr etc.
</p>
<p>
	in these folders create javascript file dictionary.js
</p>
<table class="wysiwyg-macro" data-macro-name="code" data-macro-parameters="language=javascript" style="background-image: url(/plugins/servlet/confluence/placeholder/macro-heading?definition=e2NvZGU6bGFuZ3VhZ2U9amF2YXNjcmlwdH0&amp;locale=en_GB&amp;version=2); background-repeat: no-repeat;" data-macro-body-type="PLAIN_TEXT">
<tbody>
<tr>
	<td class="wysiwyg-macro-body">
<pre>define({
    "root":true,
    'fr-fr':true
});</pre>
	</td>
</tr>
</tbody>
</table>
<p>
	Now you need to load file in to application. You can do this in different ways
</p>
<p>
	First Application.js
</p>
<table class="wysiwyg-macro" data-macro-name="code" data-macro-parameters="language=javascript" style="background-image: url(/plugins/servlet/confluence/placeholder/macro-heading?definition=e2NvZGU6bGFuZ3VhZ2U9amF2YXNjcmlwdH0&amp;locale=en_GB&amp;version=2); background-repeat: no-repeat;" data-macro-body-type="PLAIN_TEXT">
<tbody>
<tr>
	<td class="wysiwyg-macro-body">
<pre>define([
    'Titan',
    './pages/places',
    'i18n!language/example-04-1/nls/dictionary'
], function (Titan, places, dictionary) {

    return Titan.Application.extend({

        places: places,
        dictionary:dictionary,
        namespace:'example-04'

    });

});</pre>
	</td>
</tr>
</tbody>
</table>
<p>
	&nbsp;
</p>
<p>
	Second in Index file when create application
</p>
<p>
	&nbsp;
</p>
<table class="wysiwyg-macro" data-macro-name="code" data-macro-parameters="language=javascript" style="background-image: url(/plugins/servlet/confluence/placeholder/macro-heading?definition=e2NvZGU6bGFuZ3VhZ2U9amF2YXNjcmlwdH0&amp;locale=en_GB&amp;version=2); background-repeat: no-repeat;" data-macro-body-type="PLAIN_TEXT">
<tbody>
<tr>
	<td class="wysiwyg-macro-body">
<pre>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;English - Example 04&lt;/title&gt;
    &lt;meta charset="utf-8"&gt;
   &lt;!-- --------------- --&gt;
    &lt;script&gt;
        require({
                    baseUrl: 'src',
                    paths: {
                        resources: '../resources'
                    }
                }, ['domReady!',
            'example-04-2/Application',
            'i18n!resources/example-04-2/nls/dictionary'],
                function (doc, Application, dictionary) {
                    var app = new Application({
                        container: '#Container',
                        dictionary: dictionary,
                        namespace:'example-04'
                    });
                    app.start();
                });
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id="Container"&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
	</td>
</tr>
</tbody>
</table>
<p>
	We give parameter dictionary to application, ant it's available in any instance of view.
</p>
<p>
	Now we can use our dictionary variables in anywhere in templates.
</p>
<table class="wysiwyg-macro" data-macro-name="code" data-macro-parameters="language=javascript" style="background-image: url(/plugins/servlet/confluence/placeholder/macro-heading?definition=e2NvZGU6bGFuZ3VhZ2U9amF2YXNjcmlwdH0&amp;locale=en_GB&amp;version=2); background-repeat: no-repeat;" data-macro-body-type="PLAIN_TEXT">
<tbody>
<tr>
	<td class="wysiwyg-macro-body">
<pre>&lt;div data-name="Welcome"&gt;
    &lt;button data-name="button"&gt;{{dictionary.button}}&lt;/button&gt;
    &lt;div data-name="placeholder"&gt;{{dictionary.hello}}&lt;/div&gt;
    &lt;div data-name="myWidget" data-widget="example-04-1/pages/welcome/widget/Widget"&gt;&lt;/div&gt;
&lt;/div&gt;</pre>
	</td>
</tr>
</tbody>
</table>
<p>
	&nbsp;
</p>
<p>
	<span style="color: rgb(51,51,51);">RequireJS will use the browser's navigator.language or navigator.userLanguage property to determine what locale values to use for my/nls/colors, so your app does not have to change. </span>
</p>
<p>
	<span style="color: rgb(51,51,51);">If you prefer to set the locale, you can use the&nbsp;</span><span style="text-decoration: none;">module config</span><span style="color: rgb(51,51,51);">&nbsp;to pass the locale to the plugin:</span>
</p>
<table class="wysiwyg-macro" data-macro-name="code" data-macro-parameters="language=javascript" style="background-image: url(/plugins/servlet/confluence/placeholder/macro-heading?definition=e2NvZGU6bGFuZ3VhZ2U9amF2YXNjcmlwdH0&amp;locale=en_GB&amp;version=2); background-repeat: no-repeat;" data-macro-body-type="PLAIN_TEXT">
<tbody>
<tr>
	<td class="wysiwyg-macro-body">
<pre>&nbsp;requirejs.config({
    config: {
        //Set the config for the i18n
        //module ID
        i18n: {
            locale: 'fr-fr'
        }
    }
});</pre>
	</td>
</tr>
</tbody>
</table>
<p>
	<span style="color: rgb(51,51,51);">&nbsp;</span>
</p>
<p style="">
	<strong>Note</strong>&nbsp;that RequireJS will always use a lowercase version of the locale, to avoid case issues, so all of the directories and files on disk for i18n bundles should use lowercase locales.
</p>
<p>
	<span style="color: rgb(51,51,51);">&nbsp;</span>
</p>
<p style="">
	RequireJS is also smart enough to pick the right locale bundle, the one that most closely matches the ones provided by my/nls/colors. For instance, if the locale is "en-us", then the "root" bundle will be used. If the locale is "fr-fr-paris" then the "fr-fr" bundle will be used.
</p>
<p>
	<span style="color: rgb(51,51,51);">&nbsp;</span>
</p>
<p style="">
	RequireJS also combines bundles together, so for instance, if the french bundle was defined just few parameters, <span style="color: rgb(51,51,51);">then the missing values in "root" will be used. This works for all locale pieces.</span>
</p>
<p>
	<span style="color: rgb(51,51,51);"><br />
	</span>
</p>
<p>
	&nbsp;
</p>
<p>
	&nbsp;
</p>

</body>
</document>